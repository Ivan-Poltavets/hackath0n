{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Marker, Geojson } from \"react-native-maps\";\n\nvar services = require(\"./assets/services.json\");\n\nvar parkings = require(\"./assets/parkings.json\");\n\nvar kiwi = require(\"./assets/kiwi.json\");\n\nvar ewings = require(\"./assets/ewings.json\");\n\nvar parkingIcon = require(\"./assets/parking.png\");\n\nvar serviceIcon = require(\"./assets/service.png\");\n\nvar RenderMarker = function (_Component) {\n  _inherits(RenderMarker, _Component);\n\n  var _super = _createSuper(RenderMarker);\n\n  function RenderMarker(props) {\n    var _this;\n\n    _classCallCheck(this, RenderMarker);\n\n    _this = _super.call(this, props), _this.state = {\n      services: false,\n      parking: false,\n      kiwi: false,\n      ewings: false\n    };\n    return _this;\n  }\n\n  _createClass(RenderMarker, [{\n    key: \"showMarkers\",\n    value: function showMarkers(geojson, icon) {\n      return geojson.features.map(function (element, index) {\n        return React.createElement(Marker, {\n          coordinate: {\n            latitude: element.geometry.coordinates[1],\n            longitude: element.geometry.coordinates[0]\n          },\n          icon: icon,\n          key: index\n        });\n      });\n    }\n  }, {\n    key: \"setRenderMarkers\",\n    value: function setRenderMarkers(s) {\n      this.setState(s);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        initialRegion: {\n          latitude: 52.5,\n          longitude: 19.2,\n          latitudeDelta: 8.5,\n          longitudeDelta: 8.5\n        }\n      }, this.state.parking && this.showMarkers(parkings, parkingIcon), this.state.services && this.showMarkers(services, serviceIcon), this.state.ewings && React.createElement(Geojson, {\n        geojson: ewings,\n        lineDashPattern: [1],\n        fillColor: \"rgba(48, 235, 45, 0.49)\"\n      }), this.state.kiwi && React.createElement(Geojson, {\n        geojson: kiwi,\n        lineDashPattern: [1],\n        fillColor: \"rgba(48, 235, 45, 0.49)\"\n      }));\n    }\n  }]);\n\n  return RenderMarker;\n}(Component);\n\nexport default RenderMarker;","map":{"version":3,"sources":["C:/Users/vahai/Documents/space/WEBDEV/renderMarkers.js"],"names":["React","Component","Marker","Geojson","services","require","parkings","kiwi","ewings","parkingIcon","serviceIcon","RenderMarker","props","state","parking","geojson","icon","features","map","element","index","latitude","geometry","coordinates","longitude","s","setState","latitudeDelta","longitudeDelta","showMarkers"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,mBAAhC;;AAGA,IAAMC,QAAQ,GAAGC,OAAO,0BAAxB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,0BAAxB;;AACA,IAAME,IAAI,GAAGF,OAAO,sBAApB;;AACA,IAAMG,MAAM,GAAGH,OAAO,wBAAtB;;AAEA,IAAMI,WAAW,GAAGJ,OAAO,wBAA3B;;AACA,IAAMK,WAAW,GAAGL,OAAO,wBAA3B;;IAGMM,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN,GACA,MAAKC,KAAL,GAAa;AACTT,MAAAA,QAAQ,EAAE,KADD;AAETU,MAAAA,OAAO,EAAE,KAFA;AAGTP,MAAAA,IAAI,EAAE,KAHG;AAITC,MAAAA,MAAM,EAAE;AAJC,KADb;AADe;AAQlB;;;;WAED,qBAAYO,OAAZ,EAAqBC,IAArB,EACA;AACI,aAAOD,OAAO,CAACE,QAAR,CAAiBC,GAAjB,CAAqB,UAACC,OAAD,EAAUC,KAAV;AAAA,eACpB,oBAAC,MAAD;AACA,UAAA,UAAU,EAAE;AAAEC,YAAAA,QAAQ,EAAEF,OAAO,CAACG,QAAR,CAAiBC,WAAjB,CAA6B,CAA7B,CAAZ;AAA6CC,YAAAA,SAAS,EAAEL,OAAO,CAACG,QAAR,CAAiBC,WAAjB,CAA6B,CAA7B;AAAxD,WADZ;AAEA,UAAA,IAAI,EAAEP,IAFN;AAGA,UAAA,GAAG,EAAEI;AAHL,UADoB;AAAA,OAArB,CAAP;AAOH;;;WAED,0BAAiBK,CAAjB,EACA;AACI,WAAKC,QAAL,CAAcD,CAAd;AACH;;;WAED,kBAAS;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAE;AACjBJ,UAAAA,QAAQ,EAAE,IADO;AAEjBG,UAAAA,SAAS,EAAE,IAFM;AAGjBG,UAAAA,aAAa,EAAE,GAHE;AAIjBC,UAAAA,cAAc,EAAE;AAJC;AAArB,SAMM,KAAKf,KAAL,CAAWC,OAAX,IAAsB,KAAKe,WAAL,CAAiBvB,QAAjB,EAA2BG,WAA3B,CAN5B,EAOM,KAAKI,KAAL,CAAWT,QAAX,IAAuB,KAAKyB,WAAL,CAAiBzB,QAAjB,EAA2BM,WAA3B,CAP7B,EAQM,KAAKG,KAAL,CAAWL,MAAX,IAAqB,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAEA,MAAlB;AAA0B,QAAA,eAAe,EAAE,CAAC,CAAD,CAA3C;AAAgD,QAAA,SAAS,EAAC;AAA1D,QAR3B,EASM,KAAKK,KAAL,CAAWN,IAAX,IAAmB,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAEA,IAAlB;AAAwB,QAAA,eAAe,EAAE,CAAC,CAAD,CAAzC;AAA8C,QAAA,SAAS,EAAC;AAAxD,QATzB,CADJ;AAaH;;;;EAzCsBN,S;;AA4C3B,eAAeU,YAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { Marker, Geojson } from \"react-native-maps\";\r\n\r\n\r\nconst services = require(\"./assets/services.json\");\r\nconst parkings = require(\"./assets/parkings.json\");\r\nconst kiwi = require(\"./assets/kiwi.json\");\r\nconst ewings = require(\"./assets/ewings.json\");\r\n\r\nconst parkingIcon = require(\"./assets/parking.png\");\r\nconst serviceIcon = require(\"./assets/service.png\");\r\n\r\n\r\nclass RenderMarker extends Component {\r\n    constructor(props) {\r\n        super(props),\r\n        this.state = {\r\n            services: false,\r\n            parking: false,\r\n            kiwi: false,\r\n            ewings: false,\r\n        }\r\n    }\r\n\r\n    showMarkers(geojson, icon)\r\n    {\r\n        return geojson.features.map((element, index) => (\r\n                <Marker\r\n                coordinate={{ latitude: element.geometry.coordinates[1], longitude: element.geometry.coordinates[0]} }\r\n                icon={icon}\r\n                key={index}\r\n            />\r\n        ))\r\n    }\r\n\r\n    setRenderMarkers(s)\r\n    {\r\n        this.setState(s);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View initialRegion={{\r\n                latitude: 52.5,\r\n                longitude: 19.2,\r\n                latitudeDelta: 8.5,\r\n                longitudeDelta: 8.5,\r\n              }}>\r\n                { this.state.parking && this.showMarkers(parkings, parkingIcon) }\r\n                { this.state.services && this.showMarkers(services, serviceIcon) }\r\n                { this.state.ewings && <Geojson geojson={ewings} lineDashPattern={[1]} fillColor=\"rgba(48, 235, 45, 0.49)\"/> }\r\n                { this.state.kiwi && <Geojson geojson={kiwi} lineDashPattern={[1]} fillColor=\"rgba(48, 235, 45, 0.49)\"/> } \r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RenderMarker;"]},"metadata":{},"sourceType":"module"}