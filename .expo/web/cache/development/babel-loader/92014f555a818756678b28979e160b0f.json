{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport MapView from 'react-native-map-clustering';\nimport React, { useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport * as Location from 'expo-location';\nimport Search from \"./search\";\nimport Direction from \"./direction\";\nimport { Marker } from 'react-native-maps';\nimport { Popup } from \"./PopUp\";\nimport RenderMarker from \"./renderMarkers\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar ASPECT_RATIO = width / height;\nvar LATITUDE_DELTA = 0.002;\nvar LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\n\nfunction getCurrentPosition() {\n  return new Promise(function _callee(resolve, reject) {\n    var location;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n          case 3:\n            _context.next = 7;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n          case 9:\n            location = _context.sent;\n            location = {\n              coords: {\n                latitude: \"49.84585596004817\",\n                longitude: \"24.026068729812227\"\n              }\n            };\n            resolve(location);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  });\n}\n\nfunction App() {\n  var mapRef = useRef(null);\n  var directionRef = useRef(null);\n  var popupRef = useRef(null);\n  var renderMarkersRef = useRef(null);\n  getCurrentPosition().then(function (location) {\n    mapRef.current.animateToRegion({\n      latitude: location.coords.latitude,\n      longitude: location.coords.longitude,\n      latitudeDelta: LATITUDE_DELTA,\n      longitudeDelta: LONGITUDE_DELTA\n    }, 1000);\n  });\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Popup, {\n    ref: popupRef,\n    title: \"Filter\",\n    onTouchOutside: function onTouchOutside() {\n      renderMarkersRef.current.setRenderMarkers(popupRef.current.getCheckbox());\n      popupRef.current.close();\n    }\n  }), React.createElement(MapView, {\n    ref: mapRef,\n    initialRegion: {\n      latitude: 52.5,\n      longitude: 19.2,\n      latitudeDelta: 8.5,\n      longitudeDelta: 8.5\n    },\n    style: styles.map\n  }, React.createElement(RenderMarker, {\n    ref: renderMarkersRef\n  }), React.createElement(Direction, {\n    ref: directionRef\n  }), React.createElement(Marker, {\n    onPress: function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.t0 = directionRef.current;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(getCurrentPosition());\n\n            case 3:\n              _context2.t1 = _context2.sent;\n\n              _context2.t0.makeDirection.call(_context2.t0, _context2.t1, \"24.063099,49.8430112\");\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    title: \"\\u0428\\u0435\\u0432\\u0447\\u0435\\u043D\\u043A\\u0456\\u0432\\u0441\\u044C\\u043A\\u0438\\u0439 \\u0433\\u0430\\u0439\",\n    coordinate: {\n      latitude: 49.84301126547157,\n      longitude: 24.063099958587234\n    }\n  })), React.createElement(Search, {\n    showFilters: function showFilters() {\n      popupRef.current.open();\n    },\n    onSubmitEditing: function _callee3(event, text) {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.t0 = directionRef.current;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(getCurrentPosition());\n\n            case 3:\n              _context3.t1 = _context3.sent;\n              _context3.t2 = text;\n\n              _context3.t0.makeDirection.call(_context3.t0, _context3.t1, _context3.t2);\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  map: _objectSpread({}, StyleSheet.absoluteFillObject),\n  container: {\n    flex: 1\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/vahai/Documents/space/WEBDEV/App.js"],"names":["MapView","React","useRef","Location","Search","Direction","Marker","Popup","RenderMarker","Dimensions","get","width","height","ASPECT_RATIO","LATITUDE_DELTA","LONGITUDE_DELTA","getCurrentPosition","Promise","resolve","reject","requestForegroundPermissionsAsync","getCurrentPositionAsync","location","coords","latitude","longitude","App","mapRef","directionRef","popupRef","renderMarkersRef","then","current","animateToRegion","latitudeDelta","longitudeDelta","styles","container","setRenderMarkers","getCheckbox","close","map","makeDirection","open","event","text","StyleSheet","create","absoluteFillObject","flex"],"mappings":"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","sourcesContent":["import MapView from 'react-native-map-clustering';\r\nimport React, { useRef } from 'react';\r\nimport { StyleSheet, View, Dimensions } from 'react-native';\r\nimport * as Location from 'expo-location';\r\nimport Search from './search';\r\nimport Direction from './direction';\r\nimport { Marker } from 'react-native-maps';\r\nimport { Popup } from './PopUp';\r\nimport RenderMarker from './renderMarkers';\r\n\r\n\r\nconst {width, height} = Dimensions.get('window');\r\n\r\nconst ASPECT_RATIO = width / height;\r\nconst LATITUDE_DELTA = 0.002;\r\nconst LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\r\n\r\n\r\nfunction getCurrentPosition() {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      await Location.requestForegroundPermissionsAsync();\r\n    }\r\n    catch{}\r\n\r\n    let location = await Location.getCurrentPositionAsync({});\r\n    location = {coords: {latitude: \"49.84585596004817\", longitude: \"24.026068729812227\"}}\r\n    resolve(location);\r\n  });\r\n}\r\n\r\nfunction App() {\r\n  const mapRef = useRef(null);\r\n  const directionRef = useRef(null);\r\n  const popupRef = useRef(null);\r\n  const renderMarkersRef = useRef(null);\r\n\r\n  getCurrentPosition().then(location => {\r\n    mapRef.current.animateToRegion({\r\n      latitude: location.coords.latitude,\r\n      longitude: location.coords.longitude,\r\n      latitudeDelta: LATITUDE_DELTA,\r\n      longitudeDelta: LONGITUDE_DELTA\r\n    }, 1000);\r\n  });\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Popup ref={popupRef} title=\"Filter\" onTouchOutside={() => { renderMarkersRef.current.setRenderMarkers(popupRef.current.getCheckbox()); popupRef.current.close();}}></Popup>\r\n      <MapView ref={mapRef} initialRegion={{\r\n  latitude: 52.5,\r\n  longitude: 19.2,\r\n  latitudeDelta: 8.5,\r\n  longitudeDelta: 8.5,\r\n}} style={styles.map} >\r\n        <RenderMarker ref={renderMarkersRef}/>\r\n        <Direction ref={directionRef}></Direction>\r\n        <Marker onPress={async() => {directionRef.current.makeDirection(await getCurrentPosition(), \"24.063099,49.8430112\")}} title=\"Шевченківський гай\" coordinate={{latitude: 49.84301126547157, longitude: 24.063099958587234}}/>\r\n      </MapView>\r\n      <Search showFilters={() => {popupRef.current.open()}} onSubmitEditing={async(event, text) => {directionRef.current.makeDirection(await getCurrentPosition(), text)}}></Search>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  map: {\r\n    ...StyleSheet.absoluteFillObject,\r\n  },\r\n  container:{\r\n    flex:1,\r\n  },\r\n  \r\n});\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}